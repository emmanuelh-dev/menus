---
import AdminLayout from "../../layouts/AdminLayout.astro";
import { supabase } from "../../lib/supabase";
import {
  createRestaurant,
  updateRestaurant,
  type Restaurant,
} from "../../lib/supabase-schema";

// Initialize reactive variables
let restaurants: Restaurant[] = [];
let error = "";
let isEditing = false;
let currentRestaurant: Partial<Restaurant> = {
  name: "",
  description: "",
  address: "",
  phone: "",
  hours: "",
  services: [],
  price_range: "",
  image: "",
  menu_images: [],
};

// Fetch URL parameters
const url = Astro.url;
const editParam = url.searchParams.get('edit');

// Fetch restaurants
try {
  const { data, error: fetchError } = await supabase
    .from("restaurants")
    .select("*");

  if (fetchError) {
    console.error("Error fetching restaurants:", fetchError);
    error = fetchError.message;
  } else {
    restaurants = data || [];

    // Check if editing a specific restaurant
    if (editParam) {
      const restaurantToEdit = restaurants.find(
        (r) => r.id === parseInt(editParam)
      );
      
      if (restaurantToEdit) {
        isEditing = true;
        currentRestaurant = { ...restaurantToEdit };
      }
    }
  }
} catch (e) {
  console.error("Unexpected error:", e);
  error = e instanceof Error ? e.message : "An unexpected error occurred";
}

// Handle form submission
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const action = formData.get("action");

    const restaurantData: Partial<Restaurant> = {
      name: formData.get("name") as string,
      description: formData.get("description") as string,
      address: formData.get("address") as string,
      phone: formData.get("phone") as string,
      hours: formData.get("hours") as string,
      price_range: formData.get("price_range") as string,
      services: [], // You might want to handle services differently
      image: currentRestaurant.image || "", // Preserve existing image if not updated
      menu_images: currentRestaurant.menu_images || [],
    };

    if (action === "edit") {
      const restaurantId = formData.get("id") as string;
      const { error: updateError } = await updateRestaurant(
        parseInt(restaurantId),
        restaurantData
      );
      if (updateError) throw updateError;
    } else {
      const { error: createError } = await createRestaurant(restaurantData as any);
      if (createError) throw createError;
    }

    return Astro.redirect("/admin");
  } catch (e) {
    error = e instanceof Error ? e.message : "An error occurred during submission";
  }
}
---

<AdminLayout>
  <div class="max-w-6xl mx-auto">
    <h1 class="text-3xl font-serif font-bold text-[#3A2E27] mb-8">
      Panel de Administración
    </h1>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      <div class="bg-white rounded-xl p-6 shadow-md">
        <h2 class="text-2xl font-serif font-bold text-[#3A2E27] mb-6">
          {isEditing ? "Editar Restaurante" : "Agregar Nuevo Restaurante"}
        </h2>

        <form method="POST" class="space-y-4">
          <input
            type="hidden"
            name="action"
            value={isEditing ? "edit" : "create"}
          />
          {
            isEditing && (
              <input type="hidden" name="id" value={currentRestaurant.id} />
            )
          }

          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 mb-1">
              Nombre
            </label>
            <input
              id="name"
              type="text"
              name="name"
              value={currentRestaurant.name}
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#A67C52]"
              required
            />
          </div>

          <div>
            <label for="description" class="block text-sm font-medium text-gray-700 mb-1">
              Descripción
            </label>
            <textarea
              id="description"
              name="description"
              value={currentRestaurant.description}
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#A67C52]"
              rows={3}
              required></textarea>
          </div>

          <div>
            <label for="address" class="block text-sm font-medium text-gray-700 mb-1">
              Dirección
            </label>
            <input
              id="address"
              type="text"
              name="address"
              value={currentRestaurant.address}
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#A67C52]"
              required
            />
          </div>

          <div>
            <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">
              Teléfono
            </label>
            <input
              id="phone"
              type="tel"
              name="phone"
              value={currentRestaurant.phone}
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#A67C52]"
              required
            />
          </div>

          <div>
            <label for="hours" class="block text-sm font-medium text-gray-700 mb-1">
              Horario
            </label>
            <input
              id="hours"
              type="text"
              name="hours"
              value={currentRestaurant.hours}
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#A67C52]"
              required
            />
          </div>

          <div>
            <label for="price_range" class="block text-sm font-medium text-gray-700 mb-1">
              Rango de Precios
            </label>
            <select
              id="price_range"
              name="price_range"
              value={currentRestaurant.price_range}
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#A67C52]"
              required
            >
              <option value="">Seleccionar rango</option>
              <option value="$">$ (Económico)</option>
              <option value="$$">$$ (Moderado)</option>
              <option value="$$$">$$$ (Costoso)</option>
            </select>
          </div>

          {error && <div class="text-red-600 text-sm">{error}</div>}

          <button
            type="submit"
            class="w-full py-2 px-4 bg-[#A67C52] text-white rounded-md hover:bg-[#8C5E3B] transition-colors"
          >
            {isEditing ? "Guardar Cambios" : "Agregar Restaurante"}
          </button>

          {
            isEditing && (
              <a
                href="/admin"
                class="block w-full py-2 px-4 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors mt-2 text-center"
              >
                Cancelar
              </a>
            )
          }
        </form>
      </div>

      <div class="bg-white rounded-xl p-6 shadow-md">
        <h2 class="text-2xl font-serif font-bold text-[#3A2E27] mb-6">
          Restaurantes Existentes
        </h2>

        <div class="space-y-4">
          {
            restaurants.map((restaurant) => (
              <div class="border-b border-gray-200 pb-4 last:border-0">
                <h3 class="font-medium text-lg text-[#3A2E27]">
                  {restaurant.name}
                </h3>
                <p class="text-gray-600 text-sm mb-2">
                  {restaurant.description}
                </p>
                <div class="flex space-x-2">
                  <a
                    href={`/admin?edit=${restaurant.id}`}
                    class="text-[#A67C52] hover:text-[#8C5E3B] text-sm font-medium"
                  >
                    Editar
                  </a>
                </div>
              </div>
            ))
          }

          {
            restaurants.length === 0 && (
              <p class="text-center text-gray-600">
                No hay restaurantes registrados.
              </p>
            )
          }
        </div>
      </div>
  </div>
</AdminLayout>